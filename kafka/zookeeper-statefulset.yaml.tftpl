apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: ${namespace}
  labels:
    app: zookeeper
spec:
  serviceName: zookeeper-headless
  replicas: 3
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: ${zookeeper_image}
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: peer
        - containerPort: 3888
          name: leader-election
        env:
        - name: ZOO_MY_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ZOO_SERVERS
          value: >-
            server.0=zookeeper-0.zookeeper-headless.${namespace}.svc.cluster.local:2888:3888;2181
            server.1=zookeeper-1.zookeeper-headless.${namespace}.svc.cluster.local:2888:3888;2181
            server.2=zookeeper-2.zookeeper-headless.${namespace}.svc.cluster.local:2888:3888;2181
        - name: ZOO_TICK_TIME
          value: "2000"
        - name: ZOO_INIT_LIMIT
          value: "10"
        - name: ZOO_SYNC_LIMIT
          value: "5"
        volumeMounts:
        - name: zookeeper-data
          mountPath: /var/lib/zookeeper
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
  volumeClaimTemplates:
  - metadata:
      name: zookeeper-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: ${storage_class}
      resources:
        requests:
          storage: ${storage_size}